////////////////////////////
// 1) - Display
$display: (
  flex: flex,
  block: block,
  inline: inline,
  inline-block: inline-block,
  none: none,
  table: table,
  grid: grid,
) !default;

////////////////////////////
// 2) - Aligment
$aligmentFlex: (
  // Justify content
  justify-content:
    (
      start: flex-start,
      end: flex-end,
      center: center,
      stretch: stretch,
      between: space-between,
      around: space-around,
      evenly: space-evenly,
    ),
  // Align items
  align-items:
    (
      start: flex-start,
      end: flex-end,
      center: center,
      baseline: baseline,
      stretch: stretch,
    ),
  // Align content
  align-content:
    (
      start: flex-start,
      end: flex-end,
      center: center,
    ),
  // Align self
  align-self:
    (
      start: flex-start,
      end: flex-end,
      center: center,
    ),
  // Flex direction
  flex-direction:
    (
      row: row,
      column: column,
    ),
  // FLEX WRAP
  flex-wrap:
    (
      wrap: wrap,
      nowrap: nowrap,
    )
) !default;

////////////////////////////
// 3) - FLEX GROW AND SHRINK
$growAndShrink: (
  //
  flex-grow:
    (
      0: 0,
      1: 1,
      2: 2,
    ),
  //
  flex-shrink:
    (
      0: 0,
      1: 1,
      2: 2,
    )
) !default;

////////////////////////////////////////////////////////
// 1) - DISPLAY => TYPE BOX
@each $nameBox, $typeBox in $display {
  @each $choose in $chooseDisplay {
    @if $choose == $nameBox {
      .d-#{$nameBox} {
        display: $typeBox;
      }
    }
  }
}

//////////////////////////////////////////////////////////////
/// RESPONSIVE
// 1) - DISPLAY => TYPE BOX => XLG
@each $nameBox, $typeBox in $display {
  @each $choose in $chooseDisplay {
    @if $choose == $nameBox {
      @include BreakPoint(xlg) {
        .d-xlg-#{$nameBox} {
          display: $typeBox;
        }
      }
    }
  }
}

// 2) - DISPLAY => TYPE BOX => LG
@each $nameBox, $typeBox in $display {
  @each $choose in $chooseDisplay {
    @if $choose == $nameBox {
      @include BreakPoint(lg) {
        .d-lg-#{$nameBox} {
          display: $typeBox;
        }
      }
    }
  }
}

// 3) - DISPLAY => TYPE BOX => MD
@each $nameBox, $typeBox in $display {
  @each $choose in $chooseDisplay {
    @if $choose == $nameBox {
      @include BreakPoint(md) {
        .d-md-#{$nameBox} {
          display: $typeBox;
        }
      }
    }
  }
}

// 4) - DISPLAY => TYPE BOX => SM
@each $nameBox, $typeBox in $display {
  @each $choose in $chooseDisplay {
    @if $choose == $nameBox {
      @include BreakPoint(sm) {
        .d-sm-#{$nameBox} {
          display: $typeBox;
        }
      }
    }
  }
}

////////////////////////////////////////////////////////
// 2) - Aligment flex
@each $nameAligment, $typeAligment in $aligmentFlex {
  @each $choose in $chooseAligmentFlex {
    @if $choose == $nameAligment {
      @each $nameSubMap in map-keys($typeAligment) {
        .#{$nameAligment}-#{$nameSubMap} {
          #{$nameAligment}: map-get($typeAligment, $nameSubMap);
        }
      }
    }
  }
}

////////////////////////////
/// RESPONSIVE
// 1) - Aligment flex => XLG
@each $nameAligment, $typeAligment in $aligmentFlex {
  @each $choose in $chooseAligmentFlex {
    @if $choose == $nameAligment {
      @each $nameSubMap in map-keys($typeAligment) {
        @include BreakPoint(xlg) {
          .xlg-#{$nameAligment}-#{$nameSubMap} {
            #{$nameAligment}: map-get($typeAligment, $nameSubMap);
          }
        }
      }
    }
  }
}

// 2) - Aligment flex => LG
@each $nameAligment, $typeAligment in $aligmentFlex {
  @each $choose in $chooseAligmentFlex {
    @if $choose == $nameAligment {
      @each $nameSubMap in map-keys($typeAligment) {
        @include BreakPoint(lg) {
          .lg-#{$nameAligment}-#{$nameSubMap} {
            #{$nameAligment}: map-get($typeAligment, $nameSubMap);
          }
        }
      }
    }
  }
}

// 3) - Aligment flex => MD
@each $nameAligment, $typeAligment in $aligmentFlex {
  @each $choose in $chooseAligmentFlex {
    @if $choose == $nameAligment {
      @each $nameSubMap in map-keys($typeAligment) {
        @include BreakPoint(md) {
          .md-#{$nameAligment}-#{$nameSubMap} {
            #{$nameAligment}: map-get($typeAligment, $nameSubMap);
          }
        }
      }
    }
  }
}

// 4) - Aligment flex => SM
@each $nameAligment, $typeAligment in $aligmentFlex {
  @each $choose in $chooseAligmentFlex {
    @if $choose == $nameAligment {
      @each $nameSubMap in map-keys($typeAligment) {
        @include BreakPoint(sm) {
          .sm-#{$nameAligment}-#{$nameSubMap} {
            #{$nameAligment}: map-get($typeAligment, $nameSubMap);
          }
        }
      }
    }
  }
}

////////////////////////////////////////////////////////
// 3) - FLEX => GROW AND SHRINK
@each $type, $size in $growAndShrink {
  @each $choose in $chooseGrowAndShrink {
    @if $choose == $type {
      @each $nameSubMap in map-keys($size) {
        .#{$type}-#{$nameSubMap} {
          #{$type}: map-get($size, $nameSubMap);
        }
      }
    }
  }
}

////////////////////////////
/// RESPONSIVE
// 1) - XLG => FLEX => GROW AND SHRINK
@each $type, $size in $growAndShrink {
  @each $choose in $chooseGrowAndShrink {
    @if $choose == $type {
      @each $nameSubMap in map-keys($size) {
        .xlg-#{$type}-#{$nameSubMap} {
          @include BreakPoint(xlg) {
            #{$type}: map-get($size, $nameSubMap);
          }
        }
      }
    }
  }
}

// 2) - LG => FLEX => GROW AND SHRINK
@each $type, $size in $growAndShrink {
  @each $choose in $chooseGrowAndShrink {
    @if $choose == $type {
      @each $nameSubMap in map-keys($size) {
        .lg-#{$type}-#{$nameSubMap} {
          @include BreakPoint(lg) {
            #{$type}: map-get($size, $nameSubMap);
          }
        }
      }
    }
  }
}

// 3) - MD => FLEX => GROW AND SHRINK
@each $type, $size in $growAndShrink {
  @each $choose in $chooseGrowAndShrink {
    @if $choose == $type {
      @each $nameSubMap in map-keys($size) {
        .md-#{$type}-#{$nameSubMap} {
          @include BreakPoint(md) {
            #{$type}: map-get($size, $nameSubMap);
          }
        }
      }
    }
  }
}

// 4) - SM => FLEX => GROW AND SHRINK
@each $type, $size in $growAndShrink {
  @each $choose in $chooseGrowAndShrink {
    @if $choose == $type {
      @each $nameSubMap in map-keys($size) {
        .sm-#{$type}-#{$nameSubMap} {
          @include BreakPoint(sm) {
            #{$type}: map-get($size, $nameSubMap);
          }
        }
      }
    }
  }
}

////////////////////////////////////////////////////////
// 4) - FLEX => BASIS
@each $size in $flexBasis {
  .basis-#{$size} {
    @if type-of($size) == "number" {
      flex-basis: #{$size#{"%"}};
    } @else {
      flex-basis: #{$size};
    }
  }
}

////////////////////////////
/// RESPONSIVE
// 1) - XLG - FLEX => BASIS
@each $size in $flexBasis {
  .xlg-basis-#{$size} {
    @if type-of($size) == "number" {
      @include BreakPoint(xlg) {
        flex-basis: #{$size#{"%"}};
      }
    } @else {
      @include BreakPoint(xlg) {
        flex-basis: #{$size};
      }
    }
  }
}

// 2) - LG - FLEX => BASIS
@each $size in $flexBasis {
  .lg-basis-#{$size} {
    @if type-of($size) == "number" {
      @include BreakPoint(lg) {
        flex-basis: #{$size#{"%"}};
      }
    } @else {
      @include BreakPoint(lg) {
        flex-basis: #{$size};
      }
    }
  }
}

// 3) - MD - FLEX => BASIS
@each $size in $flexBasis {
  .md-basis-#{$size} {
    @if type-of($size) == "number" {
      @include BreakPoint(md) {
        flex-basis: #{$size#{"%"}};
      }
    } @else {
      @include BreakPoint(md) {
        flex-basis: #{$size};
      }
    }
  }
}

// 4) - SM - FLEX => BASIS
@each $size in $flexBasis {
  .sm-basis-#{$size} {
    @if type-of($size) == "number" {
      @include BreakPoint(sm) {
        flex-basis: #{$size#{"%"}};
      }
    } @else {
      @include BreakPoint(sm) {
        flex-basis: #{$size};
      }
    }
  }
}
